בmain   שמתי כל פונקציות העזר לפני תחילת פונקציית הmain 
בקובץ hash table הוספתי הפונקציות החסרות להשתמש ב keyvalpair בפונקצית אתחול הhash table  כדי שיהיה גינירי 
בlinked list עשיתי סטרקט לnode  וגם לרשימה מקושרת ומכיוון שבקשו generic ADT הוספתי לstruct node  פונקציית יצירה למרות שלא בוקש בעבודה .
בJerry  הוספתי הפונקציות המבוקשות כדי ששאר ה ADT's יהיו גינירים .( פונקציות העתקה ,הדפסה, הריסה והשוואה ..)
מבני הנתונים:
1.	Hash table  שכל תא מכיל רשימה מקושרת , כל תא ברשימה הוא key value pair, הערך jerry  והמפתיח הוא ID של הגירי 
הבחירה נבעה מדרישות התרגיל שכל פעולה כמו חיפוש גירי מסוים , מחיקה לגירי מסויים וגם הכנסה לפי ID דורשת O(1)  זמן ממוצע . ההריסה וההדפסה דורשת O(N)  מכיוון שהוא אמור לעבור על הכל.
השימוש בchaning  עזר לי בבחירה הזו .
בחרתי ש HashNum=11 לפי קובץ הקפוגרציה שהיה נתון לנו מספר ראשוני וגם גדול ממספר הגיגרים וקרוב להם כדי שאעמוד בדרישות השאלה .
לא עשיתי פונקציה למצאת מספר התאים לטבלת הגיבוג
2.	multiHashTable  שכל תא רשימה מקושרת כל תא ברשימה הוא key value pair המפתח הוא התכונה של גירי והערך הוא רשימה מקושרת שמכילה גיריים מסודרים לפי התכונות .
הבחירה נובעת מדרישות התרגיל לבצע כל הפיעול חוץ מהדפסה ו ההריסה שהיא דורשת O(N).
מכיוון שבחרתי שהמפתיח יהיה שם התכונה עמדתי בדרישות המבוקשת למצאת ערך התכונה הקרוב ביותר ובגלל הדרישה הזו ממשתי את המבנה באופן הבא.
